// Converts the string representation of a number into its octal form.
// @description **Description:**
// @description - Converts binary (`0b` prefix), hexadecimal (`0x` prefix), or decimal (no prefix) representations of numbers into octal form.
//
// @description **Parameters:**
// @description None. The function operates on the string object it is called on (`self`).
//
// @description **Returns:**
// @return {string}
// @description `string` The octal representation of the number, prefixed with `0x`.
//
// @example print "0b1010".toOct // prints "0o12" (binary to octal conversion)
// @example print "0x123".toOct  // prints "0o443" (hexadecimal to octal conversion)
// @example print "123".toOct    // prints "0o173" (decimal to octal conversion)
string.toOct = function
    oct_digits = "01234567"
    oct_result = ""
    if self.startsWith("0b") then
        if self == "0b0" then return "0o0"
        binary_str = self[2:]
        binary_str = binary_str.zfill(binary_str.len + (3 - binary_str.len % 3) % 3)
        for i in range(0, binary_str.len - 1, 3)
            four_bits = binary_str[i:i+3]
            decimal_val = ("0b" + four_bits).to_int
            oct_result = oct_result + oct_digits[decimal_val]
        end for
        return "0o" + oct_result.lstrip("0")
    else if self.startsWith("0x") then
        if is_match(self, "^0x0+$") then return "0o0"
        return self.toBin.toOct
    else
        return self.toInt.toOct
    end if
end function