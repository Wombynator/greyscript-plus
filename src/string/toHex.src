// Converts the string representation of a number into its hexadecimal form.
// @description **Description:**
// @description - Converts binary (`0b` prefix), octal (`0o` prefix), or decimal (no prefix) representations of numbers into hexadecimal form.
//
// @description **Parameters:**
// @description None. The function operates on the string object it is called on (`self`).
//
// @description **Returns:**
// @return {string}
// @description `string` The hexadecimal representation of the number, prefixed with `0x`.
//
// @example print "0b1010".toHex // prints "0xA" (binary to hexadecimal conversion)
// @example print "0o123".toHex  // prints "0x53" (octal to hexadecimal conversion)
// @example print "123".toHex    // prints "0x7B" (decimal to hexadecimal conversion)
string.toHex = function
    hex_digits = "0123456789ABCDEF"
    hex_result = ""
    if self.startsWith("0b") then
        if is_match(self, "^0b0+$") then return "0x0"
        binary_str = self[2:]
        binary_str = binary_str.zfill(binary_str.len + (4 - binary_str.len % 4) % 4)
        for i in range(0, binary_str.len - 1, 4)
            four_bits = binary_str[i:i+4]
            decimal_val = ("0b" + four_bits).toInt
            hex_result = hex_result + hex_digits[decimal_val]
        end for
        return "0x" + hex_result.lstrip("0")
    else if self.startsWith("0o") then
        if is_match(self, "^0o0+$") then return "0x0"
        return self.toBin.toHex
    else
        return self.toInt.toHex
    end if
end function