// Converts a string representing a number in decimal, binary, hexadecimal, or octal format into an array of bytes.
// @description **Description:**
// @description - First, checks if the string is in binary (`0b`), hexadecimal (`0x`), or octal (`0o`) format, or is a decimal number, and converts it to a binary string.
// @description - For binary strings, it pads the string to a multiple of 8 bits and then splits it into an array of 8-bit bytes.
// @description - If the input string is not in a recognized numeric format, or if conversion is attempted on a non-string input, it logs an error indicating the format error and returns `null`.
//
// @description **Parameters:**
// @description None. The function operates on the string object it is called on (`self`).
//
// @description **Returns:**
// @return {list|null}
// @description `list` An array of strings, each representing an 8-bit byte in binary format (`0b` prefix). Returns `null` if the input format is unrecognized or if the input is not a string.
//
// @example print "0xFF".bytes         // prints ["0b11111111"]
// @example print "123".bytes          // prints ["0b01111011"]
// @example print "0b1010".bytes       // prints ["0b00001010"]
// @example print "â‚¬".encodeUtf8.bytes // prints ["0b11100010", "0b10000010", "0b10101100"]
// @example print "Hello".bytes        // prints null.
string.bytes = function
    data = self
    array = []

    while len(data) != 0
    if data.lastIndexOf("0x") > data.lastIndexOf("0b") and data.lastIndexOf("0x") > data.lastIndexOf("0o") then
        array.push(data[data.lastIndexOf("0x"):].toBin[2:].zfill(8))
        data = data[:data.lastIndexOf("0x")]
    else if data.lastIndexOf("0b") > data.lastIndexOf("0x") and data.lastIndexOf("0b") > data.lastIndexOf("0o") then
        array.push(data[data.lastIndexOf("0b"):][2:].zfill(8))
        data = data[:data.lastIndexOf("0b")]
    else if data.lastIndexOf("0o") > data.lastIndexOf("0x") and data.lastIndexOf("0o") > data.lastIndexOf("0b") then
        array.push(data[data.lastIndexOf("0o"):].toBin[2:].zfill(8))
        data = data[:data.lastIndexOf("0o")]
    else
        logger.error("string.bytes", "FormatError: The input '" + self + "' is not in a recognized decimal, binary, hexadecimal, or octal format required for conversion to bytes.")
        return null
    end if
    end while
    array.reverse
    binary_string = array.join("")
    binary_string = binary_string.zfill(binary_string.len + (8 - binary_string.len % 8) % 8)
    bytes = []
    for i in range(0, len(binary_string)-1, 8)
        bytes.push("0b" + binary_string[i:i+8])
    end for
    return bytes
end function